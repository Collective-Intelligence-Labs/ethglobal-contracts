{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "id_",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "i",
						"type": "uint256"
					}
				],
				"name": "getChange",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint64",
								"name": "evnt_idx",
								"type": "uint64"
							},
							{
								"internalType": "enum DomainEventType",
								"name": "evnt_type",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "evnt_payload",
								"type": "bytes"
							}
						],
						"internalType": "struct DomainEvent",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getChangesLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes",
								"name": "aggregate_id",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "cmd_signature",
								"type": "bytes"
							},
							{
								"internalType": "enum CommandType",
								"name": "cmd_type",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "cmd_payload",
								"type": "bytes"
							}
						],
						"internalType": "struct Command",
						"name": "cmd",
						"type": "tuple"
					}
				],
				"name": "handle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "id",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reset",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint64",
								"name": "evnt_idx",
								"type": "uint64"
							},
							{
								"internalType": "enum DomainEventType",
								"name": "evnt_type",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "evnt_payload",
								"type": "bytes"
							}
						],
						"internalType": "struct DomainEvent[]",
						"name": "evnts",
						"type": "tuple[]"
					}
				],
				"name": "setup",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "contract AggregateState",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"AMMAggregate.sol": "AMMAggregate"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@lazyledger/protobuf3-solidity-lib/contracts/ProtobufLib.sol": {
			"keccak256": "0x576b0df487b0e9fd3ca3e08926642a4383f1d35eabe0125896b5d496c219957d",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://c11763350787bf4c094711078a6bb956a456b5704cde339f44136401e4d2c89e",
				"dweb:/ipfs/QmR6JhjLEDVV8MQJpmfXh77XaBJN3SempyCz63233jcuJ2"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
				"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
			]
		},
		"AMMAggregate.sol": {
			"keccak256": "0x41a3b465e207063e3d000cc6ecfd96f049d75d6ea319d38b1b1dcb99513ac2d4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://a32b30e7fb04339eec4fa92297f90ba62aa979bb6bf2068797426442774348c3",
				"dweb:/ipfs/QmTkhiVVm6fn9hUAj1cZQbMStBu4uu2Yt5RaFRRy5Z9KwU"
			]
		},
		"AMMState.sol": {
			"keccak256": "0xcef5cd44041984830f885ae2492347f282c21b187c5cb45984d81e3bedd25465",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://3a7814012a63e32681654eb3da9d3829ed7dc07f68fd0a707135b2b41ebb055a",
				"dweb:/ipfs/QmVhNLqYXsxW6snpgk2NXLwysE6fZt1D3hzwMaZYDAyREY"
			]
		},
		"Aggregate.sol": {
			"keccak256": "0x56b832fd24cbba960d2fe2a8bee0daa249824d40aae1eb033d0841bee38a7841",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://a26775e03a4acb0ee0c5ea8c91969eaa7d84ff86310c1d6dcc990b3ab1c47d3e",
				"dweb:/ipfs/QmbrbYMeX4B6nxEG584rBWjgcMXfrPwfQZQzUPNzuTnvMx"
			]
		},
		"AggregateState.sol": {
			"keccak256": "0xc4e03b8056ce1db98c9fef4f878f53a5fa6d0d2da15e0216cada1eff37bff178",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://bfec5beb0a085770ad18e9c804ba51a65e8740e45826aa4e22c31daddbe6b03f",
				"dweb:/ipfs/QmQRGhzvAwLxHajY6PDFF8CEerHZiAfU5Ug1coTAamGNeo"
			]
		},
		"Utils.sol": {
			"keccak256": "0x2f7aa6ab1052c268a343c4f0e5809df918cf2cd894bae950cd9f4ebe31cde0ea",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://ae2cf3c4526f4abf59174a52c1a4d56ef65a93001f25e8a158ff612918473926",
				"dweb:/ipfs/QmYRDb16h3siX4dKhBgdCRvsjSijAJvjAryWWELmFXb7GB"
			]
		},
		"proto/command.proto.sol": {
			"keccak256": "0x8feac20b48ec0aef848ac472610d55a5d4a959abc7ae85215fe536c245e63a35",
			"license": "CC0",
			"urls": [
				"bzz-raw://3bab274e62cc20c720a32d898cc45613077099e9d0898ffff49e56a4e63b1716",
				"dweb:/ipfs/QmPa6T3iC9NERzFzzWY3yAv6USq568WS3ep4kLrmtJ135v"
			]
		},
		"proto/event.proto.sol": {
			"keccak256": "0xa665c70a99f7d38ca0a026c56dd288f7aa7cdf921e55b3bb9a51b298ed11a33c",
			"license": "CC0",
			"urls": [
				"bzz-raw://3b94727eadd0db4bf4c623dd49b68f6860045fcda1a9d6721f82c4498175255e",
				"dweb:/ipfs/QmXMVXv2CQfC28xfgPQr3eEjWUqSL9NNypfAi31sfTag4V"
			]
		}
	},
	"version": 1
}