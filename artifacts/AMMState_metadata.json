{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balance1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balance2",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_share",
						"type": "uint256"
					}
				],
				"name": "getTokensEstimateForShare",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountToken1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountToken2",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isCreated",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reset",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "shares",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint64",
								"name": "evnt_idx",
								"type": "uint64"
							},
							{
								"internalType": "enum DomainEventType",
								"name": "evnt_type",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "evnt_payload",
								"type": "bytes"
							}
						],
						"internalType": "struct DomainEvent",
						"name": "evnt",
						"type": "tuple"
					}
				],
				"name": "spool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token1",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token2",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"AMMState.sol": "AMMState"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@lazyledger/protobuf3-solidity-lib/contracts/ProtobufLib.sol": {
			"keccak256": "0x576b0df487b0e9fd3ca3e08926642a4383f1d35eabe0125896b5d496c219957d",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://c11763350787bf4c094711078a6bb956a456b5704cde339f44136401e4d2c89e",
				"dweb:/ipfs/QmR6JhjLEDVV8MQJpmfXh77XaBJN3SempyCz63233jcuJ2"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
				"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
			]
		},
		"AMMState.sol": {
			"keccak256": "0xbd9101ec24fbf7901ff66ee1572434fd18f1fbcd9ed6d01c0ea14ee83ff26348",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://0aacd4b86d094eaa634f402e5f343d2c3437e0a92680dc334818ddd5da070765",
				"dweb:/ipfs/QmPQJ1mrpHjKPWqJS7LzsQEKfU8aA1RgdQCTmSsA3NDJa5"
			]
		},
		"AggregateState.sol": {
			"keccak256": "0xc4e03b8056ce1db98c9fef4f878f53a5fa6d0d2da15e0216cada1eff37bff178",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://bfec5beb0a085770ad18e9c804ba51a65e8740e45826aa4e22c31daddbe6b03f",
				"dweb:/ipfs/QmQRGhzvAwLxHajY6PDFF8CEerHZiAfU5Ug1coTAamGNeo"
			]
		},
		"Utils.sol": {
			"keccak256": "0x2f7aa6ab1052c268a343c4f0e5809df918cf2cd894bae950cd9f4ebe31cde0ea",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://ae2cf3c4526f4abf59174a52c1a4d56ef65a93001f25e8a158ff612918473926",
				"dweb:/ipfs/QmYRDb16h3siX4dKhBgdCRvsjSijAJvjAryWWELmFXb7GB"
			]
		},
		"proto/command.proto.sol": {
			"keccak256": "0x27efc4f506b48d11ccb7c9019c93f904c36c3fc4d56acd7fcf74ce972cd45c6f",
			"license": "CC0",
			"urls": [
				"bzz-raw://6addaf453e2d5d9b371ffc6d6766d9dca6e4e4bfb6a3bc7db85c75b653f565eb",
				"dweb:/ipfs/QmV9keHuyqztRb2qv8AAx4Bm3VLSrjiE4LLGCwsYZHSw6x"
			]
		},
		"proto/event.proto.sol": {
			"keccak256": "0x9559af87a8d5fcb312835970dfb7d162d996dd9e1e0aba7da5665e79d89ce351",
			"license": "CC0",
			"urls": [
				"bzz-raw://6a4f4866597220c465221968267f6dcee0a17d9b77f09672a5221852d27a0802",
				"dweb:/ipfs/Qmeh4J2Y8tt3WwMji2cEVrMYRSz18Rs3wG4S7UGQ4QoLhV"
			]
		}
	},
	"version": 1
}